#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!markdown

Esta carpeta pareciera ser una carpeta de repositorio, aqui se almacenan diferentes metodos.
-----------------------------------------------------------------------------------------------
This folder appears to be a repository folder, different methods are stored here.

IBomService
    public interface IBomService
    {
        Task<BomEntryDto?> GetBomEntryForComponentInLine(string partNo, string lineCode);
    }

ICegidRadioService
    public interface ICegidRadioService
    {
        Task<string> GenerateFabricationControlFileAsync(string? partNo, string? revision, string workOrderCode, int? quantity, long? etiID);
    }

IEtiService
    public interface IEtiService
    {
        Task<HttpApiJsonResponse<EtiInfoDto>> GetEtiInfoAsync(string scannerInput);
    }
}

IPointOfUseService
    public interface IPointOfUseService
    {
        Task<bool> LoadMaterialAsync(string partNo, string workOrderCode, string etiNo, string pointOfUseCode, string componentNo);

        Task<bool> LoadMaterialAsync(string lineCode, string etiInput, string pointOfUseCode);
    }
